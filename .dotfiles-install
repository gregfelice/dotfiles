#!/bin/bash

# A simple shell script to initialize and manage a bare Git repository for dotfiles.

# Stop the script if any command fails
set -e

dotfiles() {
  git --git-dir=$HOME/.dotfiles/ --work-tree=$HOME "$@"
}

echo "Starting dotfiles setup..."

# Variables for the script
DOTFILES_DIR="$HOME/.dotfiles"
REPO_URL="git@github.com:gregfelice/dotfiles.git"

# Check if the dotfiles directory already exists
if [ -d "$DOTFILES_DIR" ]; then
  echo "Dotfiles directory already exists. Skipping cloning."
else
  # Clone the bare dotfiles repository to the user's home directory
  echo "Cloning the dotfiles repository to $DOTFILES_DIR..."
  git clone --bare "$REPO_URL" "$DOTFILES_DIR"
fi

# Checkout the files from the repository to the home directory
# The -f flag forces the checkout, which may overwrite existing files
echo "Checking out files from the dotfiles repository..."
dotfiles checkout

# Set up the remote
dotfiles remote add origin "$REPO_URL"
dotfiles branch -M main

# You can add new files and commit them to your repository
# For example, to add .bashrc and .zshrc
# dotfiles add .bashrc .zshrc

# Create the initial commit
# dotfiles commit -m "initial commit"

# push to the remote repo
# dotfiles push -u origin main

echo "Dotfiles setup complete! The 'dotfiles' alias is now available."
echo "You may need to source your shell configuration file (e.g., 'source ~/.bashrc') or open a new terminal for the alias to take effect."
